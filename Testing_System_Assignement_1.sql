
CREATE DATABASE Testing_System_Assignement_i;

USE Testing_System_Assignement_i;

CREATE TABLE `Department` (
DepartmentID INT PRIMARY KEY,
DepartmentName VARCHAR(30)  NOT NULL UNIQUE KEY
);

CREATE TABLE `Position` (
PositionID  INT PRIMARY KEY,
PositionName ENUM('Dev','Test','Serum Master','PM') NOT NULL UNIQUE KEY
);

CREATE TABLE `Account` (
AccountID INT PRIMARY KEY,
Email TINYINT NOT NULL UNIQUE KEY,
Username  VARCHAR(30) NOT NULL UNIQUE KEY,
FullName VARCHAR(30) NOT NULL UNIQUE KEY,
DepartmentID INT NOT NULL UNIQUE KEY,
PositionID INT NOT NULL UNIQUE KEY,
CreateDate INT NOT NULL UNIQUE KEY,
FOREIGN KEY(DepartmentID) REFERENCES  `Department`(DepartmentID) ON DELETE CASCADE,
FOREIGN KEY(PositionID) REFERENCES  `Position`(PositionID) ON DELETE CASCADE
);

CREATE TABLE `Group` (
GroupID  INT PRIMARY KEY,
GroupName INT NOT NULL UNIQUE KEY,
CreatorID INT NOT NULL UNIQUE KEY,
CreateDate DATE NOT NULL UNIQUE KEY
);

CREATE TABLE `GroupAccount`(
GroupID INT PRIMARY KEY,
AccountID INT NOT NULL UNIQUE KEY,
JoinDate DATE NOT NULL UNIQUE KEY
);

CREATE TABLE `TypeQuestion` (
TypeID INT PRIMARY KEY,
TypeName VARCHAR(50) NOT NULL UNIQUE KEY
);

CREATE TABLE `CategoryQuestion` (
CategoryID INT PRIMARY KEY,
CategoryName ENUM ('Java', '.NET', 'SQL', 'Postman', 'Ruby') NOT NULL UNIQUE KEY
);

CREATE TABLE `Question` (
QuestionID INT PRIMARY KEY,
Content INT NOT NULL UNIQUE KEY,
CategoryID INT NOT NULL UNIQUE KEY,
TypeID INT NOT NULL UNIQUE KEY,
CreatorID INT NOT NULL UNIQUE KEY,
CreateDate INT NOT NULL UNIQUE KEY
);

CREATE TABLE `Answer` (
AnswerID INT PRIMARY KEY,
Content CHAR NOT NULL UNIQUE KEY,
QuestionID  INT NOT NULL UNIQUE KEY,
IsCorrect BOOL NOT NULL UNIQUE KEY,
FOREIGN KEY(QuestionID) REFERENCES  `Question`(QuestionID) ON DELETE CASCADE
);

CREATE TABLE `Exam` (
ExamID INT PRIMARY KEY,
`Code` BIT NOT NULL UNIQUE KEY,
Title  VARCHAR(30) NOT NULL UNIQUE KEY,
CategoryID INT NOT NULL UNIQUE KEY,
Duration DATETIME NOT NULL UNIQUE KEY,
CreatorID INT NOT NULL UNIQUE KEY,
CreateDate Date NOT NULL UNIQUE KEY
);

CREATE TABLE `ExamQuestion` (
ExamID INT PRIMARY KEY,
QuestionID  INT NOT NULL UNIQUE KEY,
FOREIGN KEY(ExamID) REFERENCES  `Exam`(ExamID) ON DELETE CASCADE,
FOREIGN KEY(QuestionID) REFERENCES  `Question`(QuestionID) ON DELETE CASCADE
);



